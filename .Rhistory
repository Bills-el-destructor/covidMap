library(shiny)
source("name.R")
ui = fluidPage(
sliderInput(inputId = "num", label = "Escoge un número",
value = 1, min = 1, max = 365, animate =   animationOptions(interval = 100)),
plotOutput("histograma")
)
server = function(input, output) {
output$histograma = renderPlot({
hist(rnorm(input$num))
})
}
shinyApp(ui = ui, server = server)
ui = fluidPage(
sliderInput(inputId = "num", label = "Escoge un número",
value = name, min = 1, max = 365, animate =   animationOptions(interval = 100)),
plotOutput("histograma")
)
runApp()
runApp()
library(shiny)
source("name.R")
ui = fluidPage(
sliderInput(inputId = "num", label = "Escoge un número",
value = name, min = 1, max = 365, animate =   animationOptions(interval = 100)),
plotOutput("histograma")
)
server = function(input, output) {
output$histograma = renderPlot({
hist(rnorm(input$num))
})
}
shinyApp(ui = ui, server = server)
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='bills-el-destructor',
token='1D4F9DC4AADFBDF4DE63261DDD528351',
secret='OqR+x1Y1doklW48UURBc3wNeKUwiNI3W1ODpIsG9')
shiny::runApp()
library(shiny)
source("name.R")
ui = fluidPage(
sliderInput(inputId = "num", label = "Escoge un número",
value = name, min = 1, max = 365, animate =   animationOptions(interval = 100)),
plotOutput("histograma")
)
server = function(input, output) {
output$histograma = renderPlot({
hist(rnorm(input$num))
})
}
shinyApp(ui = ui, server = server)
shiny::runApp()
runApp()
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='bills-el-destructor',
token='1D4F9DC4AADFBDF4DE63261DDD528351',
secret='OqR+x1Y1doklW48UURBc3wNeKUwiNI3W1ODpIsG9')
shiny::runApp()
?icon
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
server = function(input, output) {
output$mymap = renderLeaflet(
leaflet() %>%
addProviderTiles("CartoDB.DarkMatter") %>%
addPolygons(data = provincias,
fillColor = ~pal(provincias$CASOS),
weight = 0.5,
opacity = 1,
color = "green",
fillOpacity = 0.8) %>%
addLegend(position = "bottomright", pal = pal, values = provincias$CASOS, opacity = 0.7, title = "CASOS")
)
output$text = renderText({input$dia})
}
runApp()
runApp()
shiny::runApp()
library(dplyr)
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
View(casos)
casos = arrange(casos, paises)
View(casos)
casos_por_dia = data.frame(
factor(casos$paises)
)
View(casos_por_dia)
library(dplyr)
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
casos = arrange(casos, paises)
View(casos)
library(dplyr)
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
casos = arrange(casos, dia)
View(casos)
casos_por_dia = data.frame(
factor(casos$paises)
)
View(casos_por_dia)
plot(factor(casos_por_dia))
plot(factor(casos_por_dia$paises))
library(dplyr)
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
casos = arrange(casos, dia)
library(dplyr)
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
casos = arrange(casos, dia)
plot(factor(casos$paises))
library(dplyr)
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
plot(factor(casos$paises))
View(casos)
plot(factor(casos$paises))
plot(factor(casos$dia))
plot(factor(casos$paises))
casos_por_dia = levels(casos$paises)
levels(casos$paises)
casos_por_dia = levels(factor(casos$paises))
levels(factor(casos$paises))
casos_por_dia = data.frame(
levels(factor(casos$paises))
)
View(casos_por_dia)
casos_por_dia = data.frame(
"paises" = levels(factor(casos$paises))
)
View(casos_por_dia)
for (dia in 1:length(factor(casos$dia))) {
casos_por_dia = cbind(casos_por_dia, ceros)
names(casos_por_dia)[dia+1] = dia
}
ceros = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
for (dia in 1:length(factor(casos$dia))) {
casos_por_dia = cbind(casos_por_dia, ceros)
names(casos_por_dia)[dia+1] = dia
}
for (dia in 1:7) {
casos_por_dia = cbind(casos_por_dia, ceros)
names(casos_por_dia)[dia+1] = dia
}
library(dplyr)
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
casos = arrange(casos, dia)
casos_por_dia = data.frame(
"paises" = levels(factor(casos$paises))
)
ceros = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
for (dia in 1:7) {
casos_por_dia = cbind(casos_por_dia, ceros)
names(casos_por_dia)[dia+1] = dia
}
View(casos_por_dia)
ceros = c(0,0,0,0,0,0,0)
for (dia in 1:length(casos_por_dia$paises)) {
casos_por_dia = cbind(casos_por_dia, ceros)
names(casos_por_dia)[dia+1] = dia
}
nrow(casos_por_dia$paises)
nrow(casos_por_dia)
View(casos_por_dia)
ceros = replicate(nrow(casos_por_dia), 0)
for (dia in 1:length(casos_por_dia)) {
casos_por_dia = cbind(casos_por_dia, ceros)
names(casos_por_dia)[dia+1] = dia
}
View(casos_por_dia)
dias = nrow(casos_por_dia)
ceros = replicate(dias, 0)
library(dplyr)
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
casos = arrange(casos, dia)
casos_por_dia = data.frame(
"paises" = levels(factor(casos$paises))
)
dias = nrow(casos_por_dia)
ceros = replicate(dias, 0)
for (dia in 1:dias) {
casos_por_dia = cbind(casos_por_dia, ceros)
names(casos_por_dia)[dia+1] = dia
}
View(casos_por_dia)
View(casos)
a = 5
inc(5)
`++` <- function(x) eval.parent(substitute(x <-x +1))
a++
rm(++)
casos[1][1]
View(casos)
casos[1,1]
casos[1,1]
nrow(casos)
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
casos = arrange(casos, dia)
nrow(casos)
nrow(casos$dia)
factor(casos$dia)
nlevels(factor(casos$dia))
nlevels(factor(casos$paises))
factor(casos$paises)
levels(factor(casos$paises))
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
casos = arrange(casos, dia)
casos_por_dia = data.frame(matrix(ncol = nlevels(factor(casos$dia)), nrow = nlevels(factor(casos$paises))))
names = levels(factor(casos$paises))
colnames(casos_por_dia) = names
View(casos_por_dia)
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
casos = arrange(casos, dia)
casos_por_dia = data.frame(matrix(ncol = nlevels(factor(casos$dia)), nrow = nlevels(factor(casos$paises))))
View(casos_por_dia)
casos_por_dia = data.frame(matrix(ncol = nlevels(factor(casos$dia))-1, nrow = nlevels(factor(casos$paises))))
View(casos_por_dia)
names = levels(factor(casos$paises))
colnames(casos_por_dia) = names
View(casos_por_dia)
nrow(casos_por_dia)
casos_por_dia = data.frame(matrix(0, ncol = nlevels(factor(casos$dia))-1, nrow = nlevels(factor(casos$paises))))
View(casos_por_dia)
casos_por_dia = data.frame(matrix(0, ncol = nlevels(factor(casos$dia))-1, nrow = nlevels(factor(casos$paises))+1))
View(casos_por_dia)
names = levels(factor(casos$paises))
colnames(casos_por_dia) = names
View(casos_por_dia)
for (dia in 1:dias) {
names(casos_por_dia)[dia+1] = dia
}
View(casos)
for (caso in nrow(casos)) {
casos_por_dia[casos[caso, dia], casos[caso, paises]] = casos_por_dia[casos[caso, dia], casos[caso, paises]] +1
}
casos_por_dia[casos[caso, dia], casos[caso, paises]] = casos_por_dia[casos[caso, dia], casos[caso, paises]] +1
for (caso in nrow(casos)) {
casos_por_dia[casos[caso, 2], casos[caso, 1]] = casos_por_dia[casos[caso, 2], casos[caso, 1]] +1
}
View(casos_por_dia)
nrow(casos)
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
casos = arrange(casos, dia)
casos_por_dia = data.frame(matrix(0, ncol = nlevels(factor(casos$dia))-1, nrow = nlevels(factor(casos$paises))+1))
names = levels(factor(casos$paises))
colnames(casos_por_dia) = names
View(casos_por_dia)
for (caso in nrow(casos)) {
casos_por_dia[casos[caso, 2], casos[caso, 1]] = casos_por_dia[casos[caso, 2], casos[caso, 1]] + 1
}
View(casos_por_dia)
View(casos)
for (variable in 6) {
cat(variable)
}
for (caso in 1:nrow(casos)) {
casos_por_dia[casos[caso, 2], casos[caso, 1]] = casos_por_dia[casos[caso, 2], casos[caso, 1]] + 1
}
View(casos_por_dia)
casos = data.frame(
"paises" = c("VENEZUELA", "VENEZUELA", "PERU", "BOLIVIA", "PERU", "PERU", "CHILE", "ECUADOR", "BOLIVIA", "ECUADOR", "BRASIL", "VENEZUELA", "BRASIL", "BRASIL", "CHILE"),
"dia" = c(1,5,5,5,2,4,3,7,7,6,1,6,4,3,3),
"casos" = c("SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI","SI")
)
casos = arrange(casos, dia)
casos_por_dia = data.frame(matrix(0, ncol = nlevels(factor(casos$dia))-1, nrow = nlevels(factor(casos$paises))+1))
colnames(casos_por_dia) =levels(factor(casos$paises))
for (caso in 1:nrow(casos)) {
casos_por_dia[casos[caso, 2], casos[caso, 1]] = casos_por_dia[casos[caso, 2], casos[caso, 1]] + 1
}
View(casos_por_dia)
View(casos)
setwd("C:/Users/Bill/Desktop/RStudio tests")
library(dplyr)
library(ggplot2)
source("Themes ggplot2 dark background.R")
covid = read.csv("covid.csv", header = TRUE, sep = ",")
View(covid)
class(covid)
factor(covid$red)
plot(factor(covid$red))
library(sf)
library(raster)
library(dplyr)
library(spData)
library(tmap)
library(leaflet)
library(ggplot2)
library(tmap)
library(sf)
library(extrafont)
myshp = st_read("PUNO/PROVINCIAS_PUNO.shp")
View(myshp)
tmap_options(bg.color = "black", attr.color = "grey")
tm_shape(myshp) + tm_polygons()
M = tm_shape(myshp) +
tmap_options(inner.margins = c(0.1, 0.1, 0.02, 0.01)) +
tm_fill('PROVINCIA', #tm_fill = rellena de colores el mapa y la paleta
title = '',
palette = c("black", "red"), # "OrRd" "Blues" "Greys" "RdYlGn" c("red", "white")
style = 'quantile') +
tm_layout(frame = T, #frame.double.line = T,
main.title = 'Mapa Covid 19 Puno 2020 - 2021', #main.title = Todo respecto al titutlo general
main.title.size = 1,
fontface = 2,
fontfamily = 'Times New Roman',
main.title.position = c(0.12, 0.5)) +
tm_borders(col = "white", lwd = 1, lty = "solid", alpha = 0.25) +
tm_text('PROVINCIA', size = 0.5, fontface = 2, fontfamily = 'Tw Cen MT Condensed') + #tm_text = nombres de los distritos
#tm_shape(myshp) +
#tm_text("IDDIST", size = 0.4, fontface = 2, fontfamily = 'Tw Cen MT Condensed', auto.placement = 0.05) +
tm_credits("Autor: Bill", fontface = "italic", align = "right")
M
factor(covid$provincia_residencia)
plot(factor(covid$provincia_residencia))
plot(factor(covid$residencia))
plot(factor(covid$residencia))
